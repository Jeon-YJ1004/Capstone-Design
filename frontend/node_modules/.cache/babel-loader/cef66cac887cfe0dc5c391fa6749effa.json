{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\frontend\\\\src\\\\routes\\\\info\\\\Cafe_info.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ClockCircleOutlined } from '@ant-design/icons';\nimport { Divider } from 'antd';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport Star from '../../components/cafe/Star';\nimport { InfoWrapper } from '../../globalStyles';\nimport Location from \"./Location\";\nimport { cafeService } from '../../service/cafes';\nimport { Map } from './Location.style';\nimport Pathfind from './pathfind';\nimport { FlexContainer, InfoItem, InfoList, InfoText, Locationpath, Name, NameContainer, TitleContainer } from './Cafe_info.style';\nimport { queryAllByAltText } from '@testing-library/dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CafeInfo() {\n  _s();\n\n  // const params = props.match.params;\n  const [cafe, setCafe] = useState({});\n  useEffect(() => {\n    getCafeInfo();\n  }, []);\n  useEffect(() => {\n    getCafeInfo();\n  }, []);\n  let {\n    id\n  } = useParams();\n  const cafeId = parseInt(id);\n  const {\n    name,\n    score,\n    time,\n    address,\n    link,\n    longitude,\n    latitude\n  } = cafe;\n\n  const getCafeInfo = async () => {\n    try {\n      const res = await cafeService.getCafeById(cafeId);\n      setCafe(res.data);\n      const container = document.getElementById('map');\n      const options = {\n        center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        level: 3\n      };\n      const map = new kakao.maps.Map(container, options);\n      var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";\n      var imageSize = new kakao.maps.Size(28, 40);\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        title: res.data.name,\n        image: markerImage\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NameContainer, {\n        children: /*#__PURE__*/_jsxDEV(Name, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Star, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoList, {\n      children: [address && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMapMarkerAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), time && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlexContainer, {\n      children: /*#__PURE__*/_jsxDEV(Locationpath, {\n        children: [/*#__PURE__*/_jsxDEV(InfoWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"LOCATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Map, {\n            id: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/pathfind\",\n            search: `?cafeId=${cafeId}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CafeInfo, \"+1C2WawFm5BsZwN3eabBpm4plFk=\", false, function () {\n  return [useParams];\n});\n\n_c = CafeInfo;\n;\nexport default CafeInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CafeInfo\");","map":{"version":3,"sources":["C:/project/capstone/frontend/src/routes/info/Cafe_info.js"],"names":["React","Link","useState","useEffect","useCallback","useParams","FontAwesomeIcon","ClockCircleOutlined","Divider","faMapMarkerAlt","Star","InfoWrapper","Location","cafeService","Map","Pathfind","FlexContainer","InfoItem","InfoList","InfoText","Locationpath","Name","NameContainer","TitleContainer","queryAllByAltText","CafeInfo","cafe","setCafe","getCafeInfo","id","cafeId","parseInt","name","score","time","address","link","longitude","latitude","res","getCafeById","data","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","imageSrc","imageSize","Size","markerImage","MarkerImage","marker","Marker","position","title","image","e","console","log","message","pathname","search"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,mBAAR,QAAkC,mBAAlC;AACA,SAAQC,OAAR,QAAsB,MAAtB;AACA,SAAQC,cAAR,QAA6B,mCAA7B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,GAAR,QAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACIC,aADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,QAJJ,EAKIC,YALJ,EAMIC,IANJ,EAOIC,aAPJ,EAQIC,cARJ,QASO,mBATP;AAUA,SAAQC,iBAAR,QAAgC,sBAAhC;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,MAAI;AAACC,IAAAA;AAAD,MAAOxB,SAAS,EAApB;AACA,QAAMyB,MAAM,GAAGC,QAAQ,CAACF,EAAD,CAAvB;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,IAA7B;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA;AAA9C,MAA0DZ,IAAhE;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMW,GAAG,GAAG,MAAM1B,WAAW,CAAC2B,WAAZ,CAAwBV,MAAxB,CAAlB;AACAH,MAAAA,OAAO,CAACY,GAAG,CAACE,IAAL,CAAP;AACA,YAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBV,GAAG,CAACE,IAAJ,CAASH,QAA/B,EAAyCC,GAAG,CAACE,IAAJ,CAASJ,SAAlD,CADI;AAEZa,QAAAA,KAAK,EAAE;AAFK,OAAhB;AAIA,YAAMC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWlC,GAAf,CAAmB4B,SAAnB,EAA8BG,OAA9B,CAAZ;AACA,UAAIO,QAAQ,GAAG,iIAAf;AACA,UAAIC,SAAS,GAAG,IAAIN,KAAK,CAACC,IAAN,CAAWM,IAAf,CAAoB,EAApB,EAAwB,EAAxB,CAAhB;AACA,UAAIC,WAAW,GAAG,IAAIR,KAAK,CAACC,IAAN,CAAWQ,WAAf,CAA2BJ,QAA3B,EAAqCC,SAArC,CAAlB;AACA,UAAII,MAAM,GAAG,IAAIV,KAAK,CAACC,IAAN,CAAWU,MAAf,CAAsB;AAC/BP,QAAAA,GAAG,EAAEA,GAD0B;AAE/BQ,QAAAA,QAAQ,EAAE,IAAIZ,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBV,GAAG,CAACE,IAAJ,CAASH,QAA/B,EAAyCC,GAAG,CAACE,IAAJ,CAASJ,SAAlD,CAFqB;AAG/BuB,QAAAA,KAAK,EAAErB,GAAG,CAACE,IAAJ,CAAST,IAHe;AAI/B6B,QAAAA,KAAK,EAAEN;AAJwB,OAAtB,CAAb;AAMH,KAlBD,CAkBE,OAAOO,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,GAtBD;;AAwBA,sBACI;AAAA,4BAEI,QAAC,cAAD;AAAA,8BACI,QAAC,aAAD;AAAA,+BACI,QAAC,IAAD;AAAA,oBAAOjC;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YATJ,eAWI,QAAC,QAAD;AAAA,iBACKE,OAAO,iBACJ,QAAC,QAAD;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAE1B;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA,oBAAW0B;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,EAOKD,IAAI,iBACD,QAAC,QAAD;AAAA,gCACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARR;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAyBI,QAAC,aAAD;AAAA,6BACI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE;AAACgC,YAAAA,QAAQ,EAAE,WAAX;AAAwBC,YAAAA,MAAM,EAAG,WAAUrC,MAAO;AAAlD;AAAV;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH;;GAhFQL,Q;UAUMpB,S;;;KAVNoB,Q;AAgFR;AAED,eAAeA,QAAf","sourcesContent":["/*global kakao*/\r\nimport React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport {useState, useEffect, useCallback} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {ClockCircleOutlined} from '@ant-design/icons';\r\nimport {Divider} from 'antd';\r\nimport {faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport Star from '../../components/cafe/Star';\r\nimport {InfoWrapper} from '../../globalStyles';\r\nimport Location from \"./Location\";\r\nimport {cafeService} from '../../service/cafes';\r\nimport {Map} from './Location.style';\r\nimport Pathfind from './pathfind';\r\nimport {\r\n    FlexContainer,\r\n    InfoItem,\r\n    InfoList,\r\n    InfoText,\r\n    Locationpath,\r\n    Name,\r\n    NameContainer,\r\n    TitleContainer\r\n} from './Cafe_info.style';\r\nimport {queryAllByAltText} from '@testing-library/dom';\r\n\r\n\r\nfunction CafeInfo() {\r\n    // const params = props.match.params;\r\n    const [cafe, setCafe] = useState({});\r\n    useEffect(() => {\r\n        getCafeInfo();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getCafeInfo();\r\n    }, []);\r\n    let {id} = useParams();\r\n    const cafeId = parseInt(id);\r\n    const {name, score, time, address, link, longitude, latitude} = cafe;\r\n\r\n    const getCafeInfo = async () => {\r\n        try {\r\n            const res = await cafeService.getCafeById(cafeId);\r\n            setCafe(res.data);\r\n            const container = document.getElementById('map');\r\n            const options = {\r\n                center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n                level: 3,\r\n            };\r\n            const map = new kakao.maps.Map(container, options);\r\n            var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";\r\n            var imageSize = new kakao.maps.Size(28, 40);\r\n            var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n                title: res.data.name,\r\n                image: markerImage\r\n            });\r\n        } catch (e) {\r\n            console.log(e.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <TitleContainer>\r\n                <NameContainer>\r\n                    <Name>{name}</Name>\r\n                </NameContainer>\r\n                <Star score={score}/>\r\n            </TitleContainer>\r\n\r\n            <Divider/>\r\n\r\n            <InfoList>\r\n                {address && (\r\n                    <InfoItem>\r\n                        <FontAwesomeIcon icon={faMapMarkerAlt}/>\r\n                        <InfoText>{address}</InfoText>\r\n                    </InfoItem>\r\n                )}\r\n                {time && (\r\n                    <InfoItem>\r\n                        <ClockCircleOutlined/>\r\n                        <InfoText>{time}</InfoText>\r\n                    </InfoItem>\r\n                )}\r\n            </InfoList>\r\n            <FlexContainer>\r\n                <Locationpath>\r\n                    <InfoWrapper>\r\n                        <h1>LOCATION</h1>\r\n                        <Map id=\"map\"/>\r\n                    </InfoWrapper>\r\n                    <Link to={{pathname: \"/pathfind\", search: `?cafeId=${cafeId}`}}>\r\n                    </Link>\r\n                    {/* <div className=\"path\" onClick={() => onPathClick()}>\r\n                        길찾기\r\n                    </div> */}\r\n                </Locationpath>\r\n            </FlexContainer>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CafeInfo;"]},"metadata":{},"sourceType":"module"}