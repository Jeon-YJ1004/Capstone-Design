{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\frontend\\\\src\\\\routes\\\\Main.js\";\nimport { React, Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { Layout } from 'antd';\nimport \"../styles/main.css\";\nimport Searching from '../components/searching';\nimport Result from '../components/result';\nimport MapContainer from '../components/cafe/Map';\nimport Content from '../components/content';\nimport Cafe_Info from './info/Cafe_info';\nimport styled from \"styled-components\";\nimport zero from \"../assets/img/0.jpg\";\nimport one from \"../assets/img/1.jpg\";\nimport two from '../assets/img/2.jpg';\nimport three from \"../assets/img/3.jpg\";\nimport four from \"../assets/img/4.jpg\";\nimport five from \"../assets/img/5.jpg\";\nimport six from \"../assets/img/6.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header\n} = Layout; // const { Title } = Typography;\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bgStyle: {\n        height: \"100%\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n      }\n    };\n  }\n\n  componentWillMount() {\n    const pictureArray = [zero, one, two, three, four, five, six];\n    const randomIndex = Math.floor(Math.random() * pictureArray.length);\n    const selectedPicture = pictureArray[randomIndex];\n    this.setState({\n      bgStyle: {\n        backgroundImage: `url(${selectedPicture})`,\n        // backgroundImage: `url(${})`,\n        height: \"100%\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: this.state.bgStyle,\n      className: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/info/:id\",\n          children: /*#__PURE__*/_jsxDEV(Cafe_Info, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search/:gu/:place\",\n          render: () => /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(Searching, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/project/capstone/frontend/src/routes/Main.js"],"names":["React","Component","Switch","Route","axios","Layout","Searching","Result","MapContainer","Content","Cafe_Info","styled","zero","one","two","three","four","five","six","Header","Main","constructor","props","state","bgStyle","height","backgroundPosition","backgroundRepeat","backgroundSize","componentWillMount","pictureArray","randomIndex","Math","floor","random","length","selectedPicture","setState","backgroundImage","render"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,SAAd,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MACS,kBADT;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAWd,MAAjB,C,CAEA;;AAEA,MAAMe,IAAN,SAAmBnB,SAAnB,CAA6B;AACzBoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AACNC,QAAAA,MAAM,EAAE,MADF;AAENC,QAAAA,kBAAkB,EAAE,QAFd;AAGNC,QAAAA,gBAAgB,EAAE,WAHZ;AAINC,QAAAA,cAAc,EAAE;AAJV;AADD,KAAb;AAQH;;AAGDC,EAAAA,kBAAkB,GAAG;AAEjB,UAAMC,YAAY,GAAG,CAAClB,IAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,GAAnC,CAArB;AAEA,UAAMa,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,YAAY,CAACK,MAAxC,CAApB;AACA,UAAMC,eAAe,GAAGN,YAAY,CAACC,WAAD,CAApC;AAEA,SAAKM,QAAL,CAAc;AACVb,MAAAA,OAAO,EAAE;AACLc,QAAAA,eAAe,EAAG,OAAMF,eAAgB,GADnC;AAEL;AAEAX,QAAAA,MAAM,EAAE,MAJH;AAKLC,QAAAA,kBAAkB,EAAE,QALf;AAMLC,QAAAA,gBAAgB,EAAE,WANb;AAOLC,QAAAA,cAAc,EAAE;AAPX;AADC,KAAd;AAYH;;AAGDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAM,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAAxB;AAAiC,MAAA,SAAS,EAAC,IAA3C;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAAA,iCAA8B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,oBAAlB;AAAuC,UAAA,MAAM,EAAE,mBAAM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAArD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,MAAM,EAAE,mBAAM,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALJ,eAOI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAtDwB;;AAyD7B,eAAeJ,IAAf","sourcesContent":["import {React,Component } from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {Layout} from 'antd';\r\nimport \"../styles/main.css\"\r\nimport Searching from '../components/searching';\r\nimport Result from '../components/result';\r\nimport MapContainer from '../components/cafe/Map'\r\nimport Content from '../components/content';\r\nimport Cafe_Info\r\n    from './info/Cafe_info';\r\nimport styled from \"styled-components\";\r\nimport zero from \"../assets/img/0.jpg\";\r\nimport one from \"../assets/img/1.jpg\";\r\nimport two from '../assets/img/2.jpg';\r\nimport three from \"../assets/img/3.jpg\";\r\nimport four from \"../assets/img/4.jpg\";\r\nimport five from  \"../assets/img/5.jpg\";\r\nimport six from \"../assets/img/6.png\";\r\n\r\n\r\nconst {Header} = Layout;\r\n\r\n// const { Title } = Typography;\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            bgStyle : {\r\n                height: \"100%\",\r\n                backgroundPosition: \"center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"cover\",\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const pictureArray = [zero,one ,two ,three ,four ,five, six]\r\n\r\n        const randomIndex = Math.floor(Math.random() * pictureArray.length);\r\n        const selectedPicture = pictureArray[randomIndex];\r\n\r\n        this.setState({\r\n            bgStyle: {\r\n                backgroundImage: `url(${selectedPicture})`,\r\n                // backgroundImage: `url(${})`,\r\n\r\n                height: \"100%\",\r\n                backgroundPosition: \"center\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"cover\",\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            < div style={this.state.bgStyle} className=\"bg\">\r\n                <Switch>\r\n                    <Route exact path=\"/info/:id\"><Cafe_Info/></Route>\r\n\r\n                    <Route exact path='/search/:gu/:place' render={() => <Result/>}/>\r\n\r\n                    <Route path=\"/\" render={() => <Searching/>}/>\r\n                    {/* <Route render={() => <div className='error'>에러 페이지</div>} /> */}\r\n                    <Content/>\r\n                </Switch>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n "]},"metadata":{},"sourceType":"module"}