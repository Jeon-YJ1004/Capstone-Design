{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\src\\\\routes\\\\info\\\\cafe_info.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Searching from '../../components/searching';\nimport Map_container from \"../../components/result\";\nimport Location from \"./Location\";\nimport { cafeService } from 'service/cafes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CafeInfo = ({\n  cafeinfo\n}) => {\n  _s();\n\n  const [cafe, setCafe] = useState({});\n  let {\n    id\n  } = useParams();\n  const cafe_id = parseInt(id);\n  useEffect(() => {\n    getCafeDetail();\n  }, []);\n  const {\n    name,\n    star,\n    time,\n    address\n  } = cafe;\n\n  const getCafeDetail = async () => {\n    try {\n      const res = await cafeService.getCafeById(cafe_id);\n      setCafe(res.data);\n      const container = document.getElementById('map');\n      const options = {\n        center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        level: 3\n      };\n      const map = new kakao.maps.Map(container, options);\n      var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";\n      var imageSize = new kakao.maps.Size(28, 40);\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        title: res.data.name,\n        image: markerImage\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [cafe, name, /*#__PURE__*/_jsxDEV(InfoWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"LOCATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoList, {\n      children: [address && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMapMarkerAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), time && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CafeInfo, \"cRtVh9ElnqZfHnfl3fpAMA0kwK8=\", false, function () {\n  return [useParams];\n});\n\n_c = CafeInfo;\nexport default CafeInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CafeInfo\");","map":{"version":3,"sources":["C:/project/capstone/src/routes/info/cafe_info.js"],"names":["React","BrowserRouter","Router","Route","Switch","useState","useEffect","useCallback","useParams","Searching","Map_container","Location","cafeService","CafeInfo","cafeinfo","cafe","setCafe","id","cafe_id","parseInt","getCafeDetail","name","star","time","address","res","getCafeById","data","container","document","getElementById","options","center","kakao","maps","LatLng","latitude","longitude","level","map","Map","imageSrc","imageSize","Size","markerImage","MarkerImage","marker","Marker","position","title","image","e","console","log","message","faMapMarkerAlt"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA6BC,WAA7B,QAAgD,OAAhD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,MAAMC,QAAQ,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI;AAAEY,IAAAA;AAAF,MAAST,SAAS,EAAtB;AACA,QAAMU,OAAO,GAAGC,QAAQ,CAACF,EAAD,CAAxB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM;AAAEC,IAAAA,IAAF;AAAOC,IAAAA,IAAP;AAAYC,IAAAA,IAAZ;AAAiBC,IAAAA;AAAjB,MAA4BT,IAAlC;;AAEA,QAAMK,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMK,GAAG,GAAG,MAAMb,WAAW,CAACc,WAAZ,CAAwBR,OAAxB,CAAlB;AACAF,MAAAA,OAAO,CAACS,GAAG,CAACE,IAAL,CAAP;AACA,YAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBV,GAAG,CAACE,IAAJ,CAASS,QAA/B,EAAyCX,GAAG,CAACE,IAAJ,CAASU,SAAlD,CADM;AAEdC,QAAAA,KAAK,EAAE;AAFO,OAAhB;AAIA,YAAMC,GAAG,GAAG,IAAIN,KAAK,CAACC,IAAN,CAAWM,GAAf,CAAmBZ,SAAnB,EAA8BG,OAA9B,CAAZ;AACA,UAAIU,QAAQ,GAAG,iIAAf;AACA,UAAIC,SAAS,GAAG,IAAIT,KAAK,CAACC,IAAN,CAAWS,IAAf,CAAoB,EAApB,EAAwB,EAAxB,CAAhB;AACA,UAAIC,WAAW,GAAG,IAAIX,KAAK,CAACC,IAAN,CAAWW,WAAf,CAA2BJ,QAA3B,EAAqCC,SAArC,CAAlB;AACA,UAAII,MAAM,GAAG,IAAIb,KAAK,CAACC,IAAN,CAAWa,MAAf,CAAsB;AACjCR,QAAAA,GAAG,EAAEA,GAD4B;AAEjCS,QAAAA,QAAQ,EAAE,IAAIf,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBV,GAAG,CAACE,IAAJ,CAASS,QAA/B,EAAyCX,GAAG,CAACE,IAAJ,CAASU,SAAlD,CAFuB;AAGjCY,QAAAA,KAAK,EAAGxB,GAAG,CAACE,IAAJ,CAASN,IAHgB;AAIjC6B,QAAAA,KAAK,EAAGN;AAJyB,OAAtB,CAAb;AAMD,KAlBD,CAkBE,OAAOO,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACD;AACF,GAtBD;;AAyBA,sBACE,QAAC,QAAD;AAAA,eACGvC,IADH,EAEGM,IAFH,eAGE,QAAC,WAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,QAAD;AAAA,iBACGG,OAAO,iBACN,QAAC,QAAD;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAE+B;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAW/B;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOGD,IAAI,iBACH,QAAC,QAAD;AAAA,gCACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1DD;;GAAMV,Q;UAESL,S;;;KAFTK,Q;AA2DN,eAAeA,QAAf","sourcesContent":["/*global kakao*/\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { useState, useEffect,useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Searching from '../../components/searching';\r\nimport Map_container from \"../../components/result\";\r\nimport Location from \"./Location\";\r\nimport { cafeService } from 'service/cafes';\r\n\r\nconst CafeInfo=({cafeinfo})=>{\r\n  const [cafe, setCafe] = useState({});\r\n  let { id } = useParams();\r\n  const cafe_id = parseInt(id);\r\n  useEffect(() => {\r\n    getCafeDetail();\r\n  }, []);\r\n  const { name,star,time,address} = cafe;\r\n\r\n  const getCafeDetail = async () => {\r\n    try {\r\n      const res = await cafeService.getCafeById(cafe_id);\r\n      setCafe(res.data);\r\n      const container = document.getElementById('map');\r\n      const options = {\r\n        center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n        level: 3,\r\n      };\r\n      const map = new kakao.maps.Map(container, options);\r\n      var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";   \r\n      var imageSize = new kakao.maps.Size(28, 40); \r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); \r\n      var marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n        title : res.data.name,\r\n        image : markerImage\r\n    });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n\r\n  return(\r\n    <Fragment>\r\n      {cafe}\r\n      {name}\r\n      <InfoWrapper>\r\n          <h1>LOCATION</h1>\r\n          <Map id=\"map\" />\r\n      </InfoWrapper>\r\n      <InfoList>\r\n        {address && (\r\n          <InfoItem>\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n            <InfoText>{address}</InfoText>\r\n          </InfoItem>\r\n        )}\r\n        {time && (\r\n          <InfoItem>\r\n            <ClockCircleOutlined />\r\n            <InfoText>{time}</InfoText>\r\n          </InfoItem>\r\n        )}\r\n      </InfoList>\r\n    </Fragment>    \r\n  )\r\n}\r\nexport default CafeInfo;"]},"metadata":{},"sourceType":"module"}