{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\src\\\\routes\\\\info\\\\Location.js\",\n    _s = $RefreshSig$();\n\n/* global kakao */\nimport React, { useEffect } from 'react';\nimport { InfoWrapper } from '../../globalStyles';\nimport { Skeleton } from 'antd';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Location = ({\n  cafe,\n  loading\n}) => {\n  _s();\n\n  const {\n    longitude,\n    latitude\n  } = cafe;\n  useEffect(() => {\n    const container = document.getElementById('map');\n    const options = {\n      center: new kakao.maps.LatLng(latitude, longitude),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n  }, []);\n  const Map = styled.div`\n  width: 100%;\n  height: 20vw;\n  @media (max-width: 768px) {\n    height: 40vw;\n  }`;\n  return /*#__PURE__*/_jsxDEV(InfoWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOCATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      paragraph: {\n        rows: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Map, {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Location, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Location;\nexport default Location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["C:/project/capstone/src/routes/info/Location.js"],"names":["React","useEffect","InfoWrapper","Skeleton","styled","Location","cafe","loading","longitude","latitude","container","document","getElementById","options","center","kakao","maps","LatLng","level","map","Map","div","rows"],"mappings":";;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,SAASC,QAAT,QAAyB,MAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BH,IAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBR,QAAtB,EAAgCD,SAAhC,CADM;AAEdU,MAAAA,KAAK,EAAE;AAFO,KAAhB;AAIA,UAAMC,GAAG,GAAG,IAAIJ,KAAK,CAACC,IAAN,CAAWI,GAAf,CAAmBV,SAAnB,EAA8BG,OAA9B,CAAZ;AACD,GAPQ,EAON,EAPM,CAAT;AAQA,QAAMO,GAAG,GAAGhB,MAAM,CAACiB,GAAI;AACzB;AACA;AACA;AACA;AACA,IALE;AAOA,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGd,OAAO,gBACN,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE,IAAlB;AAAwB,MAAA,SAAS,EAAE;AAAEe,QAAAA,IAAI,EAAE;AAAR;AAAnC;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;GAAMjB,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["\r\n/* global kakao */\r\nimport React, { useEffect } from 'react';\r\nimport { InfoWrapper } from '../../globalStyles';\r\n\r\nimport { Skeleton } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst Location = ({ cafe, loading }) => {\r\n  const { longitude, latitude } = cafe;\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('map');\r\n    const options = {\r\n      center: new kakao.maps.LatLng(latitude, longitude),\r\n      level: 3,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n  }, []);\r\n  const Map = styled.div`\r\n  width: 100%;\r\n  height: 20vw;\r\n  @media (max-width: 768px) {\r\n    height: 40vw;\r\n  }`;\r\n\r\n  return (\r\n    <InfoWrapper>\r\n      <h1>LOCATION</h1>\r\n      {loading ? (\r\n        <Skeleton active={true} paragraph={{ rows: 4 }} />\r\n      ) : (\r\n        <Map id=\"map\" />\r\n      )}\r\n    </InfoWrapper>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n"]},"metadata":{},"sourceType":"module"}