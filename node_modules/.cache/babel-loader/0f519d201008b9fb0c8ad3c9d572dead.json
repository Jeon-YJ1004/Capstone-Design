{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\src\\\\routes\\\\info\\\\Cafe_info.js\",\n    _s = $RefreshSig$();\n\n/*global kakao*/\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { ClockCircleOutlined } from '@ant-design/icons';\nimport { Divider } from 'antd';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\nimport { InfoWrapper } from '../../globalStyles';\nimport Location from \"./Location\";\nimport { cafeService } from '../../service/cafes';\nimport { Map } from './Location.style';\nimport Star from '../../components/Star';\nimport Pathfind from './pathfind';\nimport { FlexContainer, InfoItem, InfoList, InfoText, Locationpath, Name, NameContainer, SubName, TitleContainer } from './Cafe_info.style';\nimport { queryAllByAltText } from '@testing-library/dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CafeInfo(props) {\n  _s();\n\n  const params = props.match.params;\n  const [cafe, setCafe] = useState({});\n  let {\n    id\n  } = useParams();\n  const cafe_id = parseInt(id);\n  useEffect(() => {\n    getCafeInfo();\n  }, []);\n  const {\n    name,\n    star,\n    time,\n    address\n  } = cafe;\n\n  const getCafeInfo = async () => {\n    try {\n      const res = await cafeService.getCafeById(cafe_id);\n      setCafe(res.data);\n      const container = document.getElementById('map');\n      const options = {\n        center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        level: 3\n      };\n      const map = new kakao.maps.Map(container, options);\n      var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";\n      var imageSize = new kakao.maps.Size(28, 40);\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\n        title: res.data.name,\n        image: markerImage\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  }; // const onPathClick = (cafe_id) => {\n  //   props.history.push({\n  //     pathname: `/pathfind/${cafe}`,\n  //     state: { cafe_id},\n  //   });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n      children: [/*#__PURE__*/_jsxDEV(NameContainer, {\n        children: /*#__PURE__*/_jsxDEV(Name, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Star, {\n        star: star\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfoList, {\n      children: [address && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMapMarkerAlt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), time && /*#__PURE__*/_jsxDEV(InfoItem, {\n        children: [/*#__PURE__*/_jsxDEV(ClockCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoText, {\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexContainer, {\n      children: /*#__PURE__*/_jsxDEV(Locationpath, {\n        children: [/*#__PURE__*/_jsxDEV(InfoWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"LOCATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Map, {\n            id: \"map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/pathfind\",\n            search: `?cafe_id=${cafe_id}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CafeInfo, \"cRtVh9ElnqZfHnfl3fpAMA0kwK8=\", false, function () {\n  return [useParams];\n});\n\n_c = CafeInfo;\n;\nexport default CafeInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CafeInfo\");","map":{"version":3,"sources":["C:/project/capstone/src/routes/info/Cafe_info.js"],"names":["React","BrowserRouter","Router","Route","Switch","Link","useState","useEffect","useCallback","useParams","FontAwesomeIcon","ClockCircleOutlined","Divider","faMapMarkerAlt","InfoWrapper","Location","cafeService","Map","Star","Pathfind","FlexContainer","InfoItem","InfoList","InfoText","Locationpath","Name","NameContainer","SubName","TitleContainer","queryAllByAltText","CafeInfo","props","params","match","cafe","setCafe","id","cafe_id","parseInt","getCafeInfo","name","star","time","address","res","getCafeById","data","container","document","getElementById","options","center","kakao","maps","LatLng","latitude","longitude","level","map","imageSrc","imageSize","Size","markerImage","MarkerImage","marker","Marker","position","title","image","e","console","log","message","pathname","search"],"mappings":"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","sourcesContent":["/*global kakao*/\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect,useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ClockCircleOutlined} from '@ant-design/icons';\r\nimport { Divider } from 'antd';\r\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { InfoWrapper } from '../../globalStyles';\r\nimport Location from \"./Location\";\r\nimport { cafeService } from '../../service/cafes';\r\nimport { Map } from './Location.style';\r\nimport Star from '../../components/Star';\r\nimport Pathfind from './pathfind';\r\nimport {\r\n  FlexContainer,\r\n  InfoItem,\r\n  InfoList,\r\n  InfoText,\r\n  Locationpath,\r\n  Name,\r\n  NameContainer,\r\n  SubName,\r\n  TitleContainer,\r\n} from './Cafe_info.style';\r\nimport { queryAllByAltText } from '@testing-library/dom';\r\n\r\n\r\n\r\nfunction CafeInfo(props){\r\n  const params = props.match.params;\r\n  const [cafe, setCafe] = useState({});\r\n  let { id } = useParams();\r\n  const cafe_id = parseInt(id);\r\n  useEffect(() => {\r\n    getCafeInfo();\r\n  }, []);\r\n  const { name,star,time,address} = cafe;\r\n\r\n  const getCafeInfo = async () => {\r\n    try {\r\n      const res = await cafeService.getCafeById(cafe_id);\r\n      setCafe(res.data);\r\n      const container = document.getElementById('map');\r\n      const options = {\r\n        center: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n        level: 3,\r\n      };\r\n      const map = new kakao.maps.Map(container, options);\r\n      var imageSrc = \"https://1.bp.blogspot.com/-08ebwsVzqag/YSXWjBOHKPI/AAAAAAAAD9s/lRd5ya_9A2AgPtylT9oyilWIGohCTv9XQCLcBGAsYHQ/s834/dark_marker.png\";   \r\n      var imageSize = new kakao.maps.Size(28, 40); \r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize); \r\n      var marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(res.data.latitude, res.data.longitude),\r\n        title : res.data.name,\r\n        image : markerImage\r\n    });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n  // const onPathClick = (cafe_id) => {\r\n  //   props.history.push({\r\n  //     pathname: `/pathfind/${cafe}`,\r\n  //     state: { cafe_id},\r\n  //   });\r\n\r\n\r\n  return(\r\n    <div>\r\n      {/* <Gallery cafe={cafe} comments={comments} /> */}\r\n\r\n      <TitleContainer>\r\n        <NameContainer>\r\n          <Name>{name}</Name>\r\n        </NameContainer>\r\n        <Star star={star} />\r\n      </TitleContainer>\r\n\r\n      <Divider />\r\n\r\n      <InfoList>\r\n        {address && (\r\n          <InfoItem>\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n            <InfoText>{address}</InfoText>\r\n          </InfoItem>\r\n        )}\r\n        {time && (\r\n          <InfoItem>\r\n            <ClockCircleOutlined />\r\n            <InfoText>{time}</InfoText>\r\n          </InfoItem>\r\n        )}\r\n      </InfoList>\r\n      <FlexContainer>\r\n        <Locationpath>\r\n        <InfoWrapper>\r\n          <h1>LOCATION</h1>\r\n          <Map id=\"map\" />\r\n        </InfoWrapper>\r\n        <Link to={{pathname:\"/pathfind\",search:`?cafe_id=${cafe_id}`}}>\r\n        </Link>\r\n        {/* <div className=\"path\" onClick={(cafe_id) => onPathClick()}>\r\n          길찾기\r\n        </div> */}\r\n        </Locationpath>\r\n      </FlexContainer>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CafeInfo;"]},"metadata":{},"sourceType":"module"}