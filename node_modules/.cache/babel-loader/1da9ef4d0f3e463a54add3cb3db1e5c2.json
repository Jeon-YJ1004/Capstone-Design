{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\capstone\\\\src\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/* global kakao */\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MapContainer() {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const container = document.getElementById('map');\n    const options = {\n      center: new kakao.maps.LatLng(37.498095, 127.02761),\n      level: 3\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude,\n            lon = position.coords.longitude;\n        var locPosition = new kakao.maps.LatLng(lat, lon);\n        map.setCenter(locPosition);\n      });\n    }\n\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    const map = new kakao.maps.Map(container, options);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: `${width - 200}px`,\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapContainer, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["C:/project/capstone/src/components/Map.js"],"names":["React","useState","useEffect","MapContainer","width","setWidth","window","innerWidth","container","document","getElementById","options","center","kakao","maps","LatLng","level","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","locPosition","map","setCenter","handleResize","Map","addEventListener","removeEventListener","height"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsB,SAAtB,EAAiC,SAAjC,CADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAAhB;;AAIA,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AAC3D,YAAIC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA1B;AAAA,YACEC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SADxB;AAEA,YAAIC,WAAW,GAAG,IAAIb,KAAK,CAACC,IAAN,CAAWC,MAAf,CAAsBM,GAAtB,EAA2BG,GAA3B,CAAlB;AACAG,QAAAA,GAAG,CAACC,SAAJ,CAAcF,WAAd;AACD,OALD;AAMD;;AACD,UAAMG,YAAY,GAAG,MAAM;AACzBxB,MAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACD,KAFD;;AAGA,UAAMoB,GAAG,GAAG,IAAId,KAAK,CAACC,IAAN,CAAWgB,GAAf,CAAmBtB,SAAnB,EAA8BG,OAA9B,CAAZ;AACAL,IAAAA,MAAM,CAACyB,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO,MAAM;AACXvB,MAAAA,MAAM,CAAC0B,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;AACD,KAFD;AAGD,GAtBQ,EAsBN,CAACzB,KAAD,CAtBM,CAAT;AAwBA,sBACE;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,KAAK,EAAE;AACLA,MAAAA,KAAK,EAAG,GAAEA,KAAK,GAAG,GAAI,IADjB;AAEL6B,MAAAA,MAAM,EAAE;AAFH;AAFT;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCQ9B,Y;;KAAAA,Y;AAsCT,eAAeA,YAAf","sourcesContent":["/* global kakao */\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction MapContainer() {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('map');\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.498095, 127.02761),\r\n      level: 3,\r\n    };\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        var lat = position.coords.latitude,\r\n          lon = position.coords.longitude;\r\n        var locPosition = new kakao.maps.LatLng(lat, lon);\r\n        map.setCenter(locPosition);\r\n      });\r\n    }\r\n    const handleResize = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [width]);\r\n\r\n  return (\r\n    <div\r\n      id=\"map\"\r\n      style={{\r\n        width: `${width - 200}px`,\r\n        height: '100vh',\r\n      }}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default MapContainer;"]},"metadata":{},"sourceType":"module"}